# To ssh via pem file (which normally needs 0600 permissions):
ssh -i /path/to/file.pem user@example.com

# To connect on an non-standard port:
ssh -p 2222 user@example.com

# To execute a command on a remote server:
ssh -t user@example.com 'the-remote-command'

# To tunnel an x session over SSH:
ssh -X user@example.com

# To launch a specific x application over SSH:
ssh -X -t user@example.com 'chromium-browser'

# To create a SOCKS proxy on localhost and port 9999
ssh -D 9999 user@example.com

# -X use an xsession, -C compress data, "-c blowfish" use the encryption blowfish
ssh user@example.com -C -c blowfish -X

# SSH: Port Forwarding
ssh -qTfnN -L port:host:hostport -l user remote_ip
ssh -qTfnN -R port:host:hostport -l user remote_ip

# ssh proxy
ssh -qTfnN -D 7070 username@sshserver

# ssh local forward
ssh -CfNg -L 6300:127.0.0.1:1521 oracle@172.16.1.164

# ssh remote forward
ssh -CfNg -R 1521:127.0.0.1:6300 oracle@172.16.1.164

# For more information, see:
# http://unix.stackexchange.com/q/12755/44856

# sshfs mount
sudo sshfs -o allow_other <username>@192.168.67.127:<serverpath> <localpath>
sudo sshfs -o allow_other -p 15514 ts@192.168.67.125:/home/ts ./your-workspace
sudo sshfs -o allow_other -o idmap=user -o uid=1000 -p xxxx username@xxx.xxx.xxx.xxx:/home/xx /mnt/xxx